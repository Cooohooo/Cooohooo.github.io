(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{361:function(s,o,e){"use strict";e.r(o);var t=e(33),i=Object(t.a)({},(function(){var s=this,o=s.$createElement,e=s._self._c||o;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"session-讲解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#session-讲解"}},[s._v("#")]),s._v(" Session 讲解")]),s._v(" "),e("h2",{attrs:{id:"定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[s._v("#")]),s._v(" 定义")]),s._v(" "),e("p",[s._v("在计算机中，尤其是在网络应用中，称为“会话控制”。Session 对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的 Web 页之间跳转时，存储在 Session 对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。"),e("br")]),s._v(" "),e("p",[s._v("基于表单认证的标准规范尚未有定论，一般会使用Cookie 来管理Session（会话）。"),e("br")]),s._v(" "),e("p",[s._v("基于表单认证本身是通过服务器端的Web 应用，将客户端发送过来的用户ID 和密码与之前登录过的信息做匹配来进行认证的。"),e("br")]),s._v(" "),e("p",[s._v("但鉴于HTTP 是无状态协议，之前已认证成功的用户状态无法通过协议层面保存下来。即，无法实现状态管理，因此即使当该用户下一次继续访问，也无法区分他与其他的用户。于是我们会使用Cookie 来管理Session，以弥补HTTP 协议中不存在的状态管理功能。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/Cooohooo/cary-notebook-image/master/images/session%E5%AE%9A%E4%B9%89.png",alt:"session定义"}})]),s._v(" "),e("h2",{attrs:{id:"session-管理及cookie-状态管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#session-管理及cookie-状态管理"}},[s._v("#")]),s._v(" Session 管理及Cookie 状态管理")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("步骤一：客户端把用户ID 和密码等登录信息放入报文的实体部分，通常是以POST 方法把请求发送给服务器。而这时，会使用HTTPS 通信来进行HTML 表单画面的显示和用户输入数据的发送。")])]),s._v(" "),e("li",[e("p",[s._v("步骤二：服务器会发放用以识别用户的Session ID。通过验证从客户端发送过来的登录信息进行身份认证，然后把用户的认证状态与Session ID 绑定后记录在服务器端。向客户端返回响应时，会在首部字段Set-Cookie 内写入Session ID（如PHPSESSID=028a8c…）你可以把Session ID 想象成一种用以区分不同用户的等位号。然而，如果Session ID 被第三方盗走，对方就可以伪装成你的身份进行恶意操作了。因此必须防止Session ID 被盗，或被猜出。为了做到这点，Session ID 应使用难以推测的字符串，且服务器端也需要进行有效期的管理，保证其安全性。另外，为减轻跨站脚本攻击（XSS）造成的损失，建议事先在Cookie 内加上"),e("font",{attrs:{color:"red"}},[s._v("httponly")]),s._v("属性（无法通过JS更改或者获取Cookie的属性）")],1)]),s._v(" "),e("li",[e("p",[s._v("步骤三：客户端接收到从服务器端发来的Session ID 后，会将其作为Cookie 保存在本地。下次向服务器发送请求时，浏览器会自动发送Cookie，所以Session ID 也随之发送到服务器。服务器端可通过验证接收到的Session ID 识别用户和其认证状态。")])])])])}),[],!1,null,null,null);o.default=i.exports}}]);