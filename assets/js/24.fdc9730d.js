(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{345:function(t,a,v){"use strict";v.r(a);var _=v(33),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"基本概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),v("h2",{attrs:{id:"数据"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据"}},[t._v("#")]),t._v(" 数据")]),t._v(" "),v("p",[t._v("是描述客观事物的符号，市局算计中可以操作的对象，是能被计算机识别，并输入给计算及处理的符号集合")]),t._v(" "),v("h2",{attrs:{id:"数据元素"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据元素"}},[t._v("#")]),t._v(" 数据元素")]),t._v(" "),v("p",[t._v("组成数据的 有一定意义的基本单位，在计算机中通常作为整体处理，也被称作记录")]),t._v(" "),v("h2",{attrs:{id:"数据项"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据项"}},[t._v("#")]),t._v(" 数据项")]),t._v(" "),v("p",[t._v("一个数据元素可以由若干个数据项组成 "),v("br")]),t._v(" "),v("p",[v("strong",[t._v("数据项")]),t._v("是数据不可分割的最小单位")]),t._v(" "),v("h2",{attrs:{id:"数据对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据对象"}},[t._v("#")]),t._v(" 数据对象")]),t._v(" "),v("p",[t._v("是性质相同的数据元素的几盒，是数据的子集")]),t._v(" "),v("h2",{attrs:{id:"数据结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),v("p",[t._v("是相互之间存在一种或多种特定关系的数据元素的集合")]),t._v(" "),v("h2",{attrs:{id:"数据结构的构成"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构的构成"}},[t._v("#")]),t._v(" 数据结构的构成")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("逻辑结构")])])]),t._v(" "),v("p",[t._v("是指数据对象中数据元素之间的相互关系，又分为以下四种:")]),t._v(" "),v("ol",[v("li",[t._v("集合结构")])]),t._v(" "),v("p",[t._v("集合结构中的数据元素除了同属于一个集合外没有其他关系"),v("br")]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("线性结构")])]),t._v(" "),v("p",[t._v("线性结构中的数据元素之间是一对一的关系")]),t._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[t._v("树形结构")])]),t._v(" "),v("p",[t._v("树形结构中的数据元素之间存在一种一对多的层次关系")]),t._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[t._v("图形结构")])]),t._v(" "),v("p",[t._v("图形结构的数据元素是多对多的关系")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("物理结构")])])]),t._v(" "),v("p",[t._v("是指数据的逻辑结构在计算机中的储存形式")]),t._v(" "),v("ol",[v("li",[t._v("顺序储存结构")])]),t._v(" "),v("p",[t._v("把数据元素存放在地址连续的储存单元里，其数据间的逻辑关系和物理关系是一致的")]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("链式储存结构")])]),t._v(" "),v("p",[t._v("把数据元素存放在任意的储存单元里，这组储存单元是连续的也可以是不连续的")]),t._v(" "),v("h2",{attrs:{id:"数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),v("p",[t._v("是指一组性质相同的值的几盒以及定义在此集合上的一些操作的总称"),v("br")]),t._v(" "),v("p",[t._v("类型就用来说明前两或表达式的取值范围和所能进行的操作")]),t._v(" "),v("h2",{attrs:{id:"抽象数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#抽象数据类型"}},[t._v("#")]),t._v(" 抽象数据类型")]),t._v(" "),v("p",[t._v("是指一个数学模型及定义在该模型上的一组操作")]),t._v(" "),v("h2",{attrs:{id:"连通图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#连通图"}},[t._v("#")]),t._v(" 连通图")]),t._v(" "),v("p",[t._v("在无向图中，若任意两个顶点 vivi 与 vjvj 都有路径相通，则称该无向图为连通图。")]),t._v(" "),v("h2",{attrs:{id:"强连通图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#强连通图"}},[t._v("#")]),t._v(" 强连通图")]),t._v(" "),v("p",[t._v("在有向图中，若任意两个顶点 vivi 与 vjvj 都有路径相通，则称该有向图为强连通图。")]),t._v(" "),v("h2",{attrs:{id:"连通网"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#连通网"}},[t._v("#")]),t._v(" 连通网")]),t._v(" "),v("p",[t._v("在连通图中，若图的边具有一定的意义，每一条边都对应着一个数，称为权；权代表着连接连个顶点的代价，称这种连通图叫做连通网")]),t._v(" "),v("h2",{attrs:{id:"生成树"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生成树"}},[t._v("#")]),t._v(" 生成树")]),t._v(" "),v("p",[t._v("一个连通图的生成树是指一个连通子图，它含有图中全部 n 个顶点，但只有足以构成一棵树的 n-1 条边。一颗有 n 个顶点的生成树有且仅有 n-1 条边，如果生成树中再添加一条边，则必定成环。")]),t._v(" "),v("h2",{attrs:{id:"最小生成树"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#最小生成树"}},[t._v("#")]),t._v(" 最小生成树")]),t._v(" "),v("p",[t._v("在连通网的所有生成树中，所有边的代价和最小的生成树，称为最小生成树。")])])}),[],!1,null,null,null);a.default=r.exports}}]);